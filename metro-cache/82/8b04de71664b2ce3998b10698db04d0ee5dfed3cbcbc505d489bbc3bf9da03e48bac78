{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native/Libraries/Animated/src/AnimatedEvent","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _AnimatedEvent = _$$_REQUIRE(_dependencyMap[12], \"react-native/Libraries/Animated/src/AnimatedEvent\");\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[13], \"react-native-gesture-handler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/unknown/Documents/ujianreact8/reactjs/ujian7/node_modules/react-native-gesture-handler/DrawerLayout.js\";\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/unknown/Documents/ujianreact8/reactjs/ujian7/node_modules/react-native-gesture-handler/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n      _this._accessibilityIsModalView = _react.default.createRef();\n      _this._pointerEventsView = _react.default.createRef();\n      _this._panGestureHandler = _react.default.createRef();\n      _this._drawerShown = false;\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this._drawerShown && nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this._drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._updateShowing = function (showing) {\n        _this._drawerShown = showing;\n        _this._accessibilityIsModalView.current && _this._accessibilityIsModalView.current.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this._pointerEventsView.current && _this._pointerEventsView.current.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n            drawerPosition = _this$props2.drawerPosition,\n            minSwipeDistance = _this$props2.minSwipeDistance,\n            edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        _this._panGestureHandler.current && _this._panGestureHandler.current.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue !== undefined) {\n          var nextFramePosition = fromValue;\n\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this._updateShowing(willShow);\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this._drawerShown ? 'auto' : 'none',\n          ref: _this._pointerEventsView,\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var _this$props3 = _this.props,\n            drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n            drawerWidth = _this$props3.drawerWidth,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          ref: _this._accessibilityIsModalView,\n          accessibilityViewIsModal: _this._drawerShown,\n          style: [styles.drawerContainer, drawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.drawer, dynamicDrawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      _this._setPanGestureRef = function (ref) {\n        _this._panGestureHandler.current = ref;\n        _this.props.onGestureRef && _this.props.onGestureRef(ref);\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n            drawerPosition = _this$props4.drawerPosition,\n            drawerLockMode = _this$props4.drawerLockMode,\n            edgeWidth = _this$props4.edgeWidth,\n            minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n          ref: this._setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black',\n    drawerLockMode: 'unlocked'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawer: {\n      flex: 0\n    },\n    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,11,0],[27,0,12,0],[29,0,13,0],[31,0,21,0],[33,0,23,0],[58,0,29,0],[58,6,29,6,"DRAG_TOSS"],[58,15,29,15],[58,18,29,18],[58,22,29,0],[59,0,31,0],[59,6,31,6,"IDLE"],[59,10,31,10],[59,13,31,13],[59,19,31,0],[60,0,32,0],[60,6,32,6,"DRAGGING"],[60,14,32,14],[60,17,32,17],[60,27,32,0],[61,0,33,0],[61,6,33,6,"SETTLING"],[61,14,33,14],[61,17,33,17],[61,27,33,0],[66,0,100,2],[66,26,100,14,"props"],[66,32,100,2],[66,34,100,31,"context"],[66,41,100,2],[66,43,100,45],[67,0,100,45],[69,0,100,45],[70,0,101,4],[70,116,101,10,"props"],[70,122,101,4],[70,124,101,17,"context"],[70,131,101,4],[71,0,100,45],[71,12,95,2,"_accessibilityIsModalView"],[71,37,100,45],[71,40,95,30,"React"],[71,55,95,36,"createRef"],[71,64,95,30],[71,66,100,45],[72,0,100,45],[72,12,96,2,"_pointerEventsView"],[72,30,100,45],[72,33,96,23,"React"],[72,48,96,29,"createRef"],[72,57,96,23],[72,59,100,45],[73,0,100,45],[73,12,97,2,"_panGestureHandler"],[73,30,100,45],[73,33,97,23,"React"],[73,48,97,29,"createRef"],[73,57,97,23],[73,59,100,45],[74,0,100,45],[74,12,98,2,"_drawerShown"],[74,24,100,45],[74,27,98,17],[74,32,100,45],[76,0,100,45],[76,12,128,2,"_updateAnimatedEvent"],[76,32,100,45],[76,35,128,25],[76,45,128,26,"props"],[76,50,128,25],[76,52,128,43,"state"],[76,57,128,25],[76,59,128,64],[77,0,128,64],[77,12,130,12,"drawerPosition"],[77,26,128,64],[77,29,130,56,"props"],[77,34,128,64],[77,35,130,12,"drawerPosition"],[77,49,128,64],[78,0,128,64],[78,12,130,28,"drawerWidth"],[78,23,128,64],[78,26,130,56,"props"],[78,31,128,64],[78,32,130,28,"drawerWidth"],[78,43,128,64],[79,0,128,64],[79,12,130,41,"drawerType"],[79,22,128,64],[79,25,130,56,"props"],[79,30,128,64],[79,31,130,41,"drawerType"],[79,41,128,64],[80,0,128,64],[80,12,132,13,"dragXValue"],[80,22,128,64],[80,25,136,8,"state"],[80,30,128,64],[80,31,132,6,"dragX"],[80,36,128,64],[81,0,128,64],[81,12,133,14,"touchXValue"],[81,23,128,64],[81,26,136,8,"state"],[81,31,128,64],[81,32,133,6,"touchX"],[81,38,128,64],[82,0,128,64],[82,12,134,6,"drawerTranslation"],[82,29,128,64],[82,32,136,8,"state"],[82,37,128,64],[82,38,134,6,"drawerTranslation"],[82,55,128,64],[83,0,128,64],[83,12,135,6,"containerWidth"],[83,26,128,64],[83,29,136,8,"state"],[83,34,128,64],[83,35,135,6,"containerWidth"],[83,49,128,64],[84,0,138,4],[84,12,138,8,"dragX"],[84,17,138,13],[84,20,138,16,"dragXValue"],[84,30,138,4],[85,0,139,4],[85,12,139,8,"touchX"],[85,18,139,14],[85,21,139,17,"touchXValue"],[85,32,139,4],[87,0,141,4],[87,12,141,8,"drawerPosition"],[87,26,141,22],[87,31,141,27],[87,37,141,4],[87,39,141,35],[88,0,149,6,"dragX"],[88,10,149,6,"dragX"],[88,15,149,11],[88,18,149,14,"Animated"],[88,40,149,23,"multiply"],[88,48,149,14],[88,49,149,32],[88,53,149,36,"Animated"],[88,75,149,45,"Value"],[88,80,149,32],[88,81,149,51],[88,82,149,52],[88,83,149,32],[88,84,149,14],[88,86,149,56,"dragXValue"],[88,96,149,14],[88,97,149,6],[89,0,150,6,"touchX"],[89,10,150,6,"touchX"],[89,16,150,12],[89,19,150,15,"Animated"],[89,41,150,24,"add"],[89,44,150,15],[89,45,151,8],[89,49,151,12,"Animated"],[89,71,151,21,"Value"],[89,76,151,8],[89,77,151,27,"containerWidth"],[89,91,151,8],[89,92,150,15],[89,94,152,8,"Animated"],[89,116,152,17,"multiply"],[89,124,152,8],[89,125,152,26],[89,129,152,30,"Animated"],[89,151,152,39,"Value"],[89,156,152,26],[89,157,152,45],[89,158,152,46],[89,159,152,26],[89,160,152,8],[89,162,152,50,"touchXValue"],[89,173,152,8],[89,174,150,15],[89,175,150,6],[90,0,154,6,"touchXValue"],[90,10,154,6,"touchXValue"],[90,21,154,17],[90,22,154,18,"setValue"],[90,30,154,6],[90,31,154,27,"containerWidth"],[90,45,154,6],[91,0,155,5],[91,9,141,4],[91,15,155,11],[92,0,156,6,"touchXValue"],[92,10,156,6,"touchXValue"],[92,21,156,17],[92,22,156,18,"setValue"],[92,30,156,6],[92,31,156,27],[92,32,156,6],[93,0,157,5],[95,0,183,4],[95,12,183,8,"translationX"],[95,24,183,20],[95,27,183,23,"dragX"],[95,32,183,4],[97,0,184,4],[97,12,184,8,"drawerType"],[97,22,184,18],[97,27,184,23],[97,34,184,4],[97,36,184,32],[98,0,185,6],[98,14,185,12,"startPositionX"],[98,28,185,26],[98,31,185,29,"Animated"],[98,53,185,38,"add"],[98,56,185,29],[98,57,186,8,"touchX"],[98,63,185,29],[98,65,187,8,"Animated"],[98,87,187,17,"multiply"],[98,95,187,8],[98,96,187,26],[98,100,187,30,"Animated"],[98,122,187,39,"Value"],[98,127,187,26],[98,128,187,45],[98,129,187,46],[98,130,187,26],[98,131,187,8],[98,133,187,50,"dragX"],[98,138,187,8],[98,139,185,29],[98,140,185,6],[100,0,190,6],[100,14,190,12,"dragOffsetFromOnStartPosition"],[100,43,190,41],[100,46,190,44,"startPositionX"],[100,60,190,58],[100,61,190,59,"interpolate"],[100,72,190,44],[100,73,190,71],[101,0,191,8,"inputRange"],[101,12,191,8,"inputRange"],[101,22,191,18],[101,24,191,20],[101,25,191,21,"drawerWidth"],[101,36,191,32],[101,39,191,35],[101,40,191,20],[101,42,191,38,"drawerWidth"],[101,53,191,20],[101,55,191,51,"drawerWidth"],[101,66,191,62],[101,69,191,65],[101,70,191,20],[101,71,190,71],[102,0,192,8,"outputRange"],[102,12,192,8,"outputRange"],[102,23,192,19],[102,25,192,21],[102,26,192,22],[102,27,192,21],[102,29,192,25],[102,30,192,21],[102,32,192,28],[102,33,192,21],[103,0,190,71],[103,11,190,44],[103,12,190,6],[104,0,194,6,"translationX"],[104,10,194,6,"translationX"],[104,22,194,18],[104,25,194,21,"Animated"],[104,47,194,30,"add"],[104,50,194,21],[104,51,194,34,"dragX"],[104,56,194,21],[104,58,194,41,"dragOffsetFromOnStartPosition"],[104,87,194,21],[104,88,194,6],[105,0,195,5],[107,0,197,4],[107,14,197,9,"_openValue"],[107,24,197,4],[107,27,197,22,"Animated"],[107,49,197,31,"add"],[107,52,197,22],[107,53,197,35,"translationX"],[107,65,197,22],[107,67,197,49,"drawerTranslation"],[107,84,197,22],[107,86,197,68,"interpolate"],[107,97,197,22],[107,98,198,6],[108,0,199,8,"inputRange"],[108,10,199,8,"inputRange"],[108,20,199,18],[108,22,199,20],[108,23,199,21],[108,24,199,20],[108,26,199,24,"drawerWidth"],[108,37,199,20],[108,38,198,6],[109,0,200,8,"outputRange"],[109,10,200,8,"outputRange"],[109,21,200,19],[109,23,200,21],[109,24,200,22],[109,25,200,21],[109,27,200,25],[109,28,200,21],[109,29,198,6],[110,0,201,8,"extrapolate"],[110,10,201,8,"extrapolate"],[110,21,201,19],[110,23,201,21],[111,0,198,6],[111,9,197,22],[111,10,197,4],[112,0,205,4],[112,14,205,9,"_onGestureEvent"],[112,29,205,4],[112,32,205,27,"Animated"],[112,54,205,36,"event"],[112,59,205,27],[112,60,206,6],[112,61,206,7],[113,0,206,9,"nativeEvent"],[113,10,206,9,"nativeEvent"],[113,21,206,20],[113,23,206,22],[114,0,206,24,"translationX"],[114,12,206,24,"translationX"],[114,24,206,36],[114,26,206,38,"dragXValue"],[114,36,206,22],[115,0,206,50,"x"],[115,12,206,50,"x"],[115,13,206,51],[115,15,206,53,"touchXValue"],[116,0,206,22],[117,0,206,7],[117,9,206,6],[117,10,205,27],[117,12,207,6],[118,0,207,8,"useNativeDriver"],[118,10,207,8,"useNativeDriver"],[118,25,207,23],[118,27,207,25,"props"],[118,32,207,30],[118,33,207,31,"useNativeAnimations"],[119,0,207,6],[119,9,205,27],[119,10,205,4],[120,0,209,3],[120,7,100,45],[122,0,100,45],[122,12,211,2,"_handleContainerLayout"],[122,34,100,45],[122,37,211,27],[122,53,211,48],[123,0,211,48],[123,12,211,30,"nativeEvent"],[123,23,211,48],[123,31,211,30,"nativeEvent"],[123,42,211,48],[125,0,212,4],[125,14,212,9,"setState"],[125,22,212,4],[125,23,212,18],[126,0,212,20,"containerWidth"],[126,10,212,20,"containerWidth"],[126,24,212,34],[126,26,212,36,"nativeEvent"],[126,37,212,47],[126,38,212,48,"layout"],[126,44,212,36],[126,45,212,55,"width"],[127,0,212,18],[127,9,212,4],[128,0,213,3],[128,7,100,45],[130,0,100,45],[130,12,215,2,"_emitStateChanged"],[130,29,100,45],[130,32,215,22],[130,42,215,23,"newState"],[130,50,215,22],[130,52,215,41,"drawerWillShow"],[130,66,215,22],[130,68,215,69],[131,0,216,4],[131,14,216,9,"props"],[131,19,216,4],[131,20,216,15,"onDrawerStateChanged"],[131,40,216,4],[131,44,217,6],[131,50,217,11,"props"],[131,55,217,6],[131,56,217,17,"onDrawerStateChanged"],[131,76,217,6],[131,77,217,38,"newState"],[131,85,217,6],[131,87,217,48,"drawerWillShow"],[131,101,217,6],[131,102,216,4],[132,0,218,3],[132,7,100,45],[134,0,100,45],[134,12,220,2,"_openingHandlerStateChange"],[134,38,100,45],[134,41,220,31],[134,58,220,52],[135,0,220,52],[135,12,220,34,"nativeEvent"],[135,23,220,52],[135,32,220,34,"nativeEvent"],[135,43,220,52],[137,0,221,4],[137,12,221,8,"nativeEvent"],[137,23,221,19],[137,24,221,20,"oldState"],[137,32,221,8],[137,37,221,33,"State"],[137,70,221,39,"ACTIVE"],[137,76,221,4],[137,78,221,47],[138,0,222,6],[138,16,222,11,"_handleRelease"],[138,30,222,6],[138,31,222,26,"nativeEvent"],[138,42,222,6],[139,0,223,5],[139,9,221,4],[139,15,223,11],[139,19,223,15,"nativeEvent"],[139,30,223,26],[139,31,223,27,"state"],[139,36,223,15],[139,41,223,37,"State"],[139,74,223,43,"ACTIVE"],[139,80,223,11],[139,82,223,51],[140,0,224,6],[140,16,224,11,"_emitStateChanged"],[140,33,224,6],[140,34,224,29,"DRAGGING"],[140,42,224,6],[140,44,224,39],[140,49,224,6],[142,0,225,6],[142,14,225,10],[142,20,225,15,"props"],[142,25,225,10],[142,26,225,21,"keyboardDismissMode"],[142,45,225,10],[142,50,225,45],[142,59,225,6],[142,61,225,56],[143,0,226,8,"Keyboard"],[143,34,226,17,"dismiss"],[143,41,226,8],[144,0,227,7],[146,0,228,6],[146,14,228,10],[146,20,228,15,"props"],[146,25,228,10],[146,26,228,21,"hideStatusBar"],[146,39,228,6],[146,41,228,36],[147,0,229,8,"StatusBar"],[147,35,229,18,"setHidden"],[147,44,229,8],[147,45,229,28],[147,49,229,8],[147,51,229,34],[147,57,229,39,"props"],[147,62,229,34],[147,63,229,45,"statusBarAnimation"],[147,81,229,34],[147,85,229,67],[147,92,229,8],[148,0,230,7],[149,0,231,5],[150,0,232,3],[150,7,100,45],[152,0,100,45],[152,12,234,2,"_onTapHandlerStateChange"],[152,36,100,45],[152,39,234,29],[152,56,234,50],[153,0,234,50],[153,12,234,32,"nativeEvent"],[153,23,234,50],[153,32,234,32,"nativeEvent"],[153,43,234,50],[155,0,235,4],[155,12,236,6],[155,18,236,11,"_drawerShown"],[155,30,236,6],[155,34,237,6,"nativeEvent"],[155,45,237,17],[155,46,237,18,"oldState"],[155,54,237,6],[155,59,237,31,"State"],[155,92,237,37,"ACTIVE"],[155,98,236,6],[155,102,238,6],[155,108,238,11,"props"],[155,113,238,6],[155,114,238,17,"drawerLockMode"],[155,128,238,6],[155,133,238,36],[155,146,235,4],[155,148,239,6],[156,0,240,6],[156,16,240,11,"closeDrawer"],[156,27,240,6],[157,0,241,5],[158,0,242,3],[158,7,100,45],[160,0,100,45],[160,12,244,2,"_handleRelease"],[160,26,100,45],[160,29,244,19],[160,39,244,19,"nativeEvent"],[160,50,244,30],[160,52,244,34],[161,0,244,34],[161,26,245,56],[161,32,245,61,"props"],[161,37,244,34],[162,0,244,34],[162,12,245,12,"drawerWidth"],[162,23,244,34],[162,38,245,12,"drawerWidth"],[162,49,244,34],[163,0,244,34],[163,12,245,25,"drawerPosition"],[163,26,244,34],[163,41,245,25,"drawerPosition"],[163,55,244,34],[164,0,244,34],[164,12,245,41,"drawerType"],[164,22,244,34],[164,37,245,41,"drawerType"],[164,47,244,34],[165,0,244,34],[165,12,246,12,"containerWidth"],[165,26,244,34],[165,29,246,31],[165,35,246,36,"state"],[165,40,244,34],[165,41,246,12,"containerWidth"],[165,55,244,34],[166,0,244,34],[166,12,247,24,"dragX"],[166,17,244,34],[166,20,247,56,"nativeEvent"],[166,31,244,34],[166,32,247,10,"translationX"],[166,44,244,34],[167,0,244,34],[167,12,247,31,"velocityX"],[167,21,244,34],[167,24,247,56,"nativeEvent"],[167,35,244,34],[167,36,247,31,"velocityX"],[167,45,244,34],[168,0,244,34],[168,12,247,45,"touchX"],[168,18,244,34],[168,21,247,56,"nativeEvent"],[168,32,244,34],[168,33,247,42,"x"],[168,34,244,34],[170,0,249,4],[170,12,249,8,"drawerPosition"],[170,26,249,22],[170,31,249,27],[170,37,249,4],[170,39,249,35],[171,0,252,6,"dragX"],[171,10,252,6,"dragX"],[171,15,252,11],[171,18,252,14],[171,19,252,15,"dragX"],[171,24,252,6],[172,0,253,6,"touchX"],[172,10,253,6,"touchX"],[172,16,253,12],[172,19,253,15,"containerWidth"],[172,33,253,29],[172,36,253,32,"touchX"],[172,42,253,6],[173,0,254,6,"velocityX"],[173,10,254,6,"velocityX"],[173,19,254,15],[173,22,254,18],[173,23,254,19,"velocityX"],[173,32,254,6],[174,0,255,5],[176,0,257,4],[176,12,257,10,"gestureStartX"],[176,25,257,23],[176,28,257,26,"touchX"],[176,34,257,32],[176,37,257,35,"dragX"],[176,42,257,4],[177,0,258,4],[177,12,258,8,"dragOffsetBasedOnStart"],[177,34,258,30],[177,37,258,33],[177,38,258,4],[179,0,260,4],[179,12,260,8,"drawerType"],[179,22,260,18],[179,27,260,23],[179,34,260,4],[179,36,260,32],[180,0,261,6,"dragOffsetBasedOnStart"],[180,10,261,6,"dragOffsetBasedOnStart"],[180,32,261,28],[180,35,262,8,"gestureStartX"],[180,48,262,21],[180,51,262,24,"drawerWidth"],[180,62,262,8],[180,65,262,38,"gestureStartX"],[180,78,262,51],[180,81,262,54,"drawerWidth"],[180,92,262,8],[180,95,262,68],[180,96,261,6],[181,0,263,5],[183,0,265,4],[183,12,265,10,"startOffsetX"],[183,24,265,22],[183,27,266,6,"dragX"],[183,32,266,11],[183,35,266,14,"dragOffsetBasedOnStart"],[183,57,266,6],[183,61,266,40],[183,67,266,45,"_drawerShown"],[183,79,266,40],[183,82,266,60,"drawerWidth"],[183,93,266,40],[183,96,266,74],[183,97,266,6],[183,98,265,4],[184,0,267,4],[184,12,267,10,"projOffsetX"],[184,23,267,21],[184,26,267,24,"startOffsetX"],[184,38,267,36],[184,41,267,39,"DRAG_TOSS"],[184,50,267,48],[184,53,267,51,"velocityX"],[184,62,267,4],[185,0,269,4],[185,12,269,10,"shouldOpen"],[185,22,269,20],[185,25,269,23,"projOffsetX"],[185,36,269,34],[185,39,269,37,"drawerWidth"],[185,50,269,48],[185,53,269,51],[185,54,269,4],[187,0,271,4],[187,12,271,8,"shouldOpen"],[187,22,271,4],[187,24,271,20],[188,0,272,6],[188,16,272,11,"_animateDrawer"],[188,30,272,6],[188,31,272,26,"startOffsetX"],[188,43,272,6],[188,45,272,40,"drawerWidth"],[188,56,272,6],[188,58,272,53,"velocityX"],[188,67,272,6],[189,0,273,5],[189,9,271,4],[189,15,273,11],[190,0,274,6],[190,16,274,11,"_animateDrawer"],[190,30,274,6],[190,31,274,26,"startOffsetX"],[190,43,274,6],[190,45,274,40],[190,46,274,6],[190,48,274,43,"velocityX"],[190,57,274,6],[191,0,275,5],[192,0,276,3],[192,7,100,45],[194,0,100,45],[194,12,278,2,"_updateShowing"],[194,26,100,45],[194,29,278,19],[194,39,278,20,"showing"],[194,46,278,19],[194,48,278,41],[195,0,279,4],[195,14,279,9,"_drawerShown"],[195,26,279,4],[195,29,279,24,"showing"],[195,36,279,4],[196,0,280,4],[196,14,280,9,"_accessibilityIsModalView"],[196,39,280,4],[196,40,280,35,"current"],[196,47,280,4],[196,51,281,6],[196,57,281,11,"_accessibilityIsModalView"],[196,82,281,6],[196,83,281,37,"current"],[196,90,281,6],[196,91,281,45,"setNativeProps"],[196,105,281,6],[196,106,281,60],[197,0,282,8,"accessibilityViewIsModal"],[197,10,282,8,"accessibilityViewIsModal"],[197,34,282,32],[197,36,282,34,"showing"],[198,0,281,60],[198,9,281,6],[198,10,280,4],[199,0,284,4],[199,14,284,9,"_pointerEventsView"],[199,32,284,4],[199,33,284,28,"current"],[199,40,284,4],[199,44,285,6],[199,50,285,11,"_pointerEventsView"],[199,68,285,6],[199,69,285,30,"current"],[199,76,285,6],[199,77,285,38,"setNativeProps"],[199,91,285,6],[199,92,285,53],[200,0,286,8,"pointerEvents"],[200,10,286,8,"pointerEvents"],[200,23,286,21],[200,25,286,23,"showing"],[200,32,286,30],[200,35,286,33],[200,41,286,30],[200,44,286,42],[201,0,285,53],[201,9,285,6],[201,10,284,4],[202,0,278,41],[202,27,288,60],[202,33,288,65,"props"],[202,38,278,41],[203,0,278,41],[203,12,288,12,"drawerPosition"],[203,26,278,41],[203,42,288,12,"drawerPosition"],[203,56,278,41],[204,0,278,41],[204,12,288,28,"minSwipeDistance"],[204,28,278,41],[204,44,288,28,"minSwipeDistance"],[204,60,278,41],[205,0,278,41],[205,12,288,46,"edgeWidth"],[205,21,278,41],[205,37,288,46,"edgeWidth"],[205,46,278,41],[206,0,289,4],[206,12,289,10,"fromLeft"],[206,20,289,18],[206,23,289,21,"drawerPosition"],[206,37,289,35],[206,42,289,40],[206,48,289,4],[207,0,293,4],[207,12,293,10,"gestureOrientation"],[207,30,293,28],[207,33,294,6],[207,34,294,7,"fromLeft"],[207,42,294,15],[207,45,294,18],[207,46,294,15],[207,49,294,22],[207,50,294,23],[207,51,294,6],[207,56,294,29],[207,62,294,34,"_drawerShown"],[207,74,294,29],[207,77,294,49],[207,78,294,50],[207,79,294,29],[207,82,294,54],[207,83,294,6],[207,84,293,4],[208,0,298,4],[208,12,298,10,"hitSlop"],[208,19,298,17],[208,22,298,20,"fromLeft"],[208,30,298,28],[208,33,299,8],[209,0,299,10,"left"],[209,10,299,10,"left"],[209,14,299,14],[209,16,299,16],[209,17,299,8],[210,0,299,19,"width"],[210,10,299,19,"width"],[210,15,299,24],[210,17,299,26,"showing"],[210,24,299,33],[210,27,299,36,"undefined"],[210,36,299,33],[210,39,299,48,"edgeWidth"],[211,0,299,8],[211,9,298,28],[211,12,300,8],[212,0,300,10,"right"],[212,10,300,10,"right"],[212,15,300,15],[212,17,300,17],[212,18,300,8],[213,0,300,20,"width"],[213,10,300,20,"width"],[213,15,300,25],[213,17,300,27,"showing"],[213,24,300,34],[213,27,300,37,"undefined"],[213,36,300,34],[213,39,300,49,"edgeWidth"],[214,0,300,8],[214,9,298,4],[215,0,301,4],[215,14,301,9,"_panGestureHandler"],[215,32,301,4],[215,33,301,28,"current"],[215,40,301,4],[215,44,302,6],[215,50,302,11,"_panGestureHandler"],[215,68,302,6],[215,69,302,30,"current"],[215,76,302,6],[215,77,302,38,"setNativeProps"],[215,91,302,6],[215,92,302,53],[216,0,303,8,"hitSlop"],[216,10,303,8,"hitSlop"],[216,17,303,15],[216,19,303,8,"hitSlop"],[216,26,302,53],[217,0,304,8,"activeOffsetX"],[217,10,304,8,"activeOffsetX"],[217,23,304,21],[217,25,304,23,"gestureOrientation"],[217,43,304,41],[217,46,304,44,"minSwipeDistance"],[218,0,302,53],[218,9,302,6],[218,10,301,4],[219,0,306,3],[219,7,100,45],[221,0,100,45],[221,12,308,2,"_animateDrawer"],[221,26,100,45],[221,29,308,19],[221,39,308,20,"fromValue"],[221,48,308,19],[221,50,308,40,"toValue"],[221,57,308,19],[221,59,308,57,"velocity"],[221,67,308,19],[221,69,308,78],[222,0,309,4],[222,14,309,9,"state"],[222,19,309,4],[222,20,309,15,"dragX"],[222,25,309,4],[222,26,309,21,"setValue"],[222,34,309,4],[222,35,309,30],[222,36,309,4],[224,0,310,4],[224,14,310,9,"state"],[224,19,310,4],[224,20,310,15,"touchX"],[224,26,310,4],[224,27,310,22,"setValue"],[224,35,310,4],[224,36,311,6],[224,42,311,11,"props"],[224,47,311,6],[224,48,311,17,"drawerPosition"],[224,62,311,6],[224,67,311,36],[224,73,311,6],[224,76,311,45],[224,77,311,6],[224,80,311,49],[224,86,311,54,"state"],[224,91,311,49],[224,92,311,60,"containerWidth"],[224,106,310,4],[226,0,314,4],[226,12,314,8,"fromValue"],[226,21,314,17],[226,26,314,22,"undefined"],[226,35,314,4],[226,37,314,33],[227,0,315,6],[227,14,315,10,"nextFramePosition"],[227,31,315,27],[227,34,315,30,"fromValue"],[227,43,315,6],[229,0,316,6],[229,14,316,10],[229,20,316,15,"props"],[229,25,316,10],[229,26,316,21,"useNativeAnimations"],[229,45,316,6],[229,47,316,42],[230,0,321,8],[230,16,321,12,"fromValue"],[230,25,321,21],[230,28,321,24,"toValue"],[230,35,321,12],[230,39,321,35,"velocity"],[230,47,321,43],[230,50,321,46],[230,51,321,8],[230,53,321,49],[231,0,322,10,"nextFramePosition"],[231,14,322,10,"nextFramePosition"],[231,31,322,27],[231,34,322,30,"Math"],[231,38,322,34],[231,39,322,35,"min"],[231,42,322,30],[231,43,322,39,"fromValue"],[231,52,322,48],[231,55,322,51,"velocity"],[231,63,322,59],[231,66,322,62],[231,70,322,30],[231,72,322,68,"toValue"],[231,79,322,30],[231,80,322,10],[232,0,323,9],[232,13,321,8],[232,19,323,15],[232,23,323,19,"fromValue"],[232,32,323,28],[232,35,323,31,"toValue"],[232,42,323,19],[232,46,323,42,"velocity"],[232,54,323,50],[232,57,323,53],[232,58,323,15],[232,60,323,56],[233,0,324,10,"nextFramePosition"],[233,14,324,10,"nextFramePosition"],[233,31,324,27],[233,34,324,30,"Math"],[233,38,324,34],[233,39,324,35,"max"],[233,42,324,30],[233,43,324,39,"fromValue"],[233,52,324,48],[233,55,324,51,"velocity"],[233,63,324,59],[233,66,324,62],[233,70,324,30],[233,72,324,68,"toValue"],[233,79,324,30],[233,80,324,10],[234,0,325,9],[235,0,326,7],[237,0,327,6],[237,16,327,11,"state"],[237,21,327,6],[237,22,327,17,"drawerTranslation"],[237,39,327,6],[237,40,327,35,"setValue"],[237,48,327,6],[237,49,327,44,"nextFramePosition"],[237,66,327,6],[238,0,328,5],[240,0,330,4],[240,12,330,10,"willShow"],[240,20,330,18],[240,23,330,21,"toValue"],[240,30,330,28],[240,35,330,33],[240,36,330,4],[242,0,331,4],[242,14,331,9,"_updateShowing"],[242,28,331,4],[242,29,331,24,"willShow"],[242,37,331,4],[244,0,332,4],[244,14,332,9,"_emitStateChanged"],[244,31,332,4],[244,32,332,27,"SETTLING"],[244,40,332,4],[244,42,332,37,"willShow"],[244,50,332,4],[246,0,333,4],[246,12,333,8],[246,18,333,13,"props"],[246,23,333,8],[246,24,333,19,"hideStatusBar"],[246,37,333,4],[246,39,333,34],[247,0,334,6,"StatusBar"],[247,33,334,16,"setHidden"],[247,42,334,6],[247,43,334,26,"willShow"],[247,51,334,6],[247,53,334,36],[247,59,334,41,"props"],[247,64,334,36],[247,65,334,47,"statusBarAnimation"],[247,83,334,36],[247,87,334,69],[247,94,334,6],[248,0,335,5],[250,0,336,4,"Animated"],[250,30,336,13,"spring"],[250,36,336,4],[250,37,336,20],[250,43,336,25,"state"],[250,48,336,20],[250,49,336,31,"drawerTranslation"],[250,66,336,4],[250,68,336,50],[251,0,337,6,"velocity"],[251,10,337,6,"velocity"],[251,18,337,14],[251,20,337,6,"velocity"],[251,28,336,50],[252,0,338,6,"bounciness"],[252,10,338,6,"bounciness"],[252,20,338,16],[252,22,338,18],[252,23,336,50],[253,0,339,6,"toValue"],[253,10,339,6,"toValue"],[253,17,339,13],[253,19,339,6,"toValue"],[253,26,336,50],[254,0,340,6,"useNativeDriver"],[254,10,340,6,"useNativeDriver"],[254,25,340,21],[254,27,340,23],[254,33,340,28,"props"],[254,38,340,23],[254,39,340,34,"useNativeAnimations"],[255,0,336,50],[255,9,336,4],[255,11,341,7,"start"],[255,16,336,4],[255,17,341,13],[255,34,341,31],[256,0,341,31],[256,14,341,16,"finished"],[256,22,341,31],[256,31,341,16,"finished"],[256,39,341,31],[258,0,342,6],[258,14,342,10,"finished"],[258,22,342,6],[258,24,342,20],[259,0,343,8],[259,18,343,13,"_emitStateChanged"],[259,35,343,8],[259,36,343,31,"IDLE"],[259,40,343,8],[259,42,343,37,"willShow"],[259,50,343,8],[261,0,344,8],[261,16,344,12,"willShow"],[261,24,344,8],[261,26,344,22],[262,0,345,10],[262,20,345,15,"props"],[262,25,345,10],[262,26,345,21,"onDrawerOpen"],[262,38,345,10],[262,42,345,37],[262,48,345,42,"props"],[262,53,345,37],[262,54,345,48,"onDrawerOpen"],[262,66,345,37],[262,68,345,10],[263,0,346,9],[263,13,344,8],[263,19,346,15],[264,0,347,10],[264,20,347,15,"props"],[264,25,347,10],[264,26,347,21,"onDrawerClose"],[264,39,347,10],[264,43,347,38],[264,49,347,43,"props"],[264,54,347,38],[264,55,347,49,"onDrawerClose"],[264,68,347,38],[264,70,347,10],[265,0,348,9],[266,0,349,7],[267,0,350,5],[267,9,336,4],[268,0,351,3],[268,7,100,45],[270,0,100,45],[270,12,353,2,"openDrawer"],[270,22,100,45],[270,25,353,15],[270,37,353,59],[271,0,353,59],[271,12,353,16,"options"],[271,19,353,59],[271,90,353,52],[271,92,353,59],[273,0,354,4],[273,14,354,9,"_animateDrawer"],[273,28,354,4],[273,29,355,6,"undefined"],[273,38,354,4],[273,40,356,6],[273,46,356,11,"props"],[273,51,356,6],[273,52,356,17,"drawerWidth"],[273,63,354,4],[273,65,357,6,"options"],[273,72,357,13],[273,73,357,14,"velocity"],[273,81,357,6],[273,84,357,25,"options"],[273,91,357,32],[273,92,357,33,"velocity"],[273,100,357,6],[273,103,357,44],[273,104,354,4],[274,0,359,3],[274,7,100,45],[276,0,100,45],[276,12,361,2,"closeDrawer"],[276,23,100,45],[276,26,361,16],[276,38,361,60],[277,0,361,60],[277,12,361,17,"options"],[277,19,361,60],[277,90,361,53],[277,92,361,60],[279,0,362,4],[279,14,362,9,"_animateDrawer"],[279,28,362,4],[279,29,362,24,"undefined"],[279,38,362,4],[279,40,362,35],[279,41,362,4],[279,43,362,38,"options"],[279,50,362,45],[279,51,362,46,"velocity"],[279,59,362,38],[279,62,362,57,"options"],[279,69,362,64],[279,70,362,65,"velocity"],[279,78,362,38],[279,81,362,76],[279,82,362,4],[280,0,363,3],[280,7,100,45],[282,0,100,45],[282,12,365,2,"_renderOverlay"],[282,26,100,45],[282,29,365,19],[282,41,365,25],[283,0,367,4],[283,32,367,14],[283,38,367,19,"_openValue"],[283,48,367,4],[283,50,367,31],[283,65,367,4],[285,0,368,4],[285,12,368,10,"overlayOpacity"],[285,26,368,24],[285,29,368,27],[285,35,368,32,"_openValue"],[285,45,368,27],[285,46,368,43,"interpolate"],[285,57,368,27],[285,58,368,55],[286,0,369,6,"inputRange"],[286,10,369,6,"inputRange"],[286,20,369,16],[286,22,369,18],[286,23,369,19],[286,24,369,18],[286,26,369,22],[286,27,369,18],[286,28,368,55],[287,0,370,6,"outputRange"],[287,10,370,6,"outputRange"],[287,21,370,17],[287,23,370,19],[287,24,370,20],[287,25,370,19],[287,27,370,23],[287,30,370,19],[287,31,368,55],[288,0,371,6,"extrapolate"],[288,10,371,6,"extrapolate"],[288,21,371,17],[288,23,371,19],[289,0,368,55],[289,9,368,27],[289,10,368,4],[291,0,373,4],[291,12,373,10,"dynamicOverlayStyles"],[291,32,373,30],[291,35,373,33],[292,0,374,6,"opacity"],[292,10,374,6,"opacity"],[292,17,374,13],[292,19,374,15,"overlayOpacity"],[292,33,373,33],[293,0,375,6,"backgroundColor"],[293,10,375,6,"backgroundColor"],[293,25,375,21],[293,27,375,23],[293,33,375,28,"props"],[293,38,375,23],[293,39,375,34,"overlayColor"],[294,0,373,33],[294,9,373,4],[295,0,377,4],[295,15,378,6],[295,44,378,7],[295,88,378,6],[296,0,378,25],[296,10,378,25],[296,30,378,45],[296,32,378,47],[296,38,378,52,"_onTapHandlerStateChange"],[296,62,378,6],[297,0,378,6],[298,0,378,6],[299,0,378,6],[300,0,378,6],[301,0,378,6],[301,11,379,8],[301,40,379,9],[301,61,379,8],[301,62,379,18],[301,66,379,8],[302,0,380,10],[302,10,380,10],[302,23,380,23],[302,25,380,25],[302,31,380,30,"_drawerShown"],[302,43,380,25],[302,46,380,45],[302,52,380,25],[302,55,380,54],[302,61,379,8],[303,0,381,10],[303,10,381,10],[303,13,381,13],[303,15,381,15],[303,21,381,20,"_pointerEventsView"],[303,39,379,8],[304,0,382,10],[304,10,382,10],[304,15,382,15],[304,17,382,17],[304,18,382,18,"styles"],[304,24,382,24],[304,25,382,25,"overlay"],[304,32,382,17],[304,34,382,34,"dynamicOverlayStyles"],[304,54,382,17],[304,55,379,8],[305,0,379,8],[306,0,379,8],[307,0,379,8],[308,0,379,8],[309,0,379,8],[309,10,378,6],[309,11,377,4],[310,0,386,3],[310,7,100,45],[312,0,100,45],[312,12,388,2,"_renderDrawer"],[312,25,100,45],[312,28,388,18],[312,40,388,24],[313,0,388,24],[313,27,395,8],[313,33,395,13,"props"],[313,38,388,24],[314,0,388,24],[314,12,390,6,"drawerBackgroundColor"],[314,33,388,24],[314,49,390,6,"drawerBackgroundColor"],[314,70,388,24],[315,0,388,24],[315,12,391,6,"drawerWidth"],[315,23,388,24],[315,39,391,6,"drawerWidth"],[315,50,388,24],[316,0,388,24],[316,12,392,6,"drawerPosition"],[316,26,388,24],[316,42,392,6,"drawerPosition"],[316,56,388,24],[317,0,388,24],[317,12,393,6,"drawerType"],[317,22,388,24],[317,38,393,6,"drawerType"],[317,48,388,24],[318,0,388,24],[318,12,394,6,"contentContainerStyle"],[318,33,388,24],[318,49,394,6,"contentContainerStyle"],[318,70,388,24],[319,0,397,4],[319,12,397,10,"fromLeft"],[319,20,397,18],[319,23,397,21,"drawerPosition"],[319,37,397,35],[319,42,397,40],[319,48,397,4],[320,0,398,4],[320,12,398,10,"drawerSlide"],[320,23,398,21],[320,26,398,24,"drawerType"],[320,36,398,34],[320,41,398,39],[320,47,398,4],[321,0,399,4],[321,12,399,10,"containerSlide"],[321,26,399,24],[321,29,399,27,"drawerType"],[321,39,399,37],[321,44,399,42],[321,51,399,4],[322,0,405,4],[322,12,405,10,"reverseContentDirection"],[322,35,405,33],[322,38,405,36,"I18nManager"],[322,63,405,48,"isRTL"],[322,68,405,36],[322,71,405,56,"fromLeft"],[322,79,405,36],[322,82,405,67],[322,83,405,68,"fromLeft"],[322,91,405,4],[323,0,407,4],[323,12,407,10,"dynamicDrawerStyles"],[323,31,407,29],[323,34,407,32],[324,0,408,6,"backgroundColor"],[324,10,408,6,"backgroundColor"],[324,25,408,21],[324,27,408,23,"drawerBackgroundColor"],[324,48,407,32],[325,0,409,6,"width"],[325,10,409,6,"width"],[325,15,409,11],[325,17,409,13,"drawerWidth"],[326,0,407,32],[326,9,407,4],[327,0,411,4],[327,12,411,10,"openValue"],[327,21,411,19],[327,24,411,22],[327,30,411,27,"_openValue"],[327,40,411,4],[328,0,412,4],[328,32,412,14,"openValue"],[328,41,412,4],[328,43,412,25],[328,58,412,4],[329,0,414,4],[329,12,414,8,"containerStyles"],[329,27,414,4],[331,0,415,4],[331,12,415,8,"containerSlide"],[331,26,415,4],[331,28,415,24],[332,0,416,6],[332,14,416,12,"containerTranslateX"],[332,33,416,31],[332,36,416,34,"openValue"],[332,45,416,43],[332,46,416,44,"interpolate"],[332,57,416,34],[332,58,416,56],[333,0,417,8,"inputRange"],[333,12,417,8,"inputRange"],[333,22,417,18],[333,24,417,20],[333,25,417,21],[333,26,417,20],[333,28,417,24],[333,29,417,20],[333,30,416,56],[334,0,418,8,"outputRange"],[334,12,418,8,"outputRange"],[334,23,418,19],[334,25,418,21,"fromLeft"],[334,33,418,29],[334,36,418,32],[334,37,418,33],[334,38,418,32],[334,40,418,36,"drawerWidth"],[334,51,418,32],[334,52,418,29],[334,55,418,51],[334,56,418,52],[334,57,418,51],[334,59,418,55],[334,60,418,56,"drawerWidth"],[334,71,418,51],[334,72,416,56],[335,0,419,8,"extrapolate"],[335,12,419,8,"extrapolate"],[335,23,419,19],[335,25,419,21],[336,0,416,56],[336,11,416,34],[336,12,416,6],[337,0,421,6,"containerStyles"],[337,10,421,6,"containerStyles"],[337,25,421,21],[337,28,421,24],[338,0,422,8,"transform"],[338,12,422,8,"transform"],[338,21,422,17],[338,23,422,19],[338,24,422,20],[339,0,422,22,"translateX"],[339,14,422,22,"translateX"],[339,24,422,32],[339,26,422,34,"containerTranslateX"],[340,0,422,20],[340,13,422,19],[341,0,421,24],[341,11,421,6],[342,0,424,5],[344,0,426,4],[344,12,426,8,"drawerTranslateX"],[344,28,426,24],[344,31,426,27],[344,32,426,4],[346,0,427,4],[346,12,427,8,"drawerSlide"],[346,23,427,4],[346,25,427,21],[347,0,428,6],[347,14,428,12,"closedDrawerOffset"],[347,32,428,30],[347,35,428,33,"fromLeft"],[347,43,428,41],[347,46,428,44],[347,47,428,45,"drawerWidth"],[347,58,428,41],[347,61,428,59,"drawerWidth"],[347,72,428,6],[348,0,429,6,"drawerTranslateX"],[348,10,429,6,"drawerTranslateX"],[348,26,429,22],[348,29,429,25,"openValue"],[348,38,429,34],[348,39,429,35,"interpolate"],[348,50,429,25],[348,51,429,47],[349,0,430,8,"inputRange"],[349,12,430,8,"inputRange"],[349,22,430,18],[349,24,430,20],[349,25,430,21],[349,26,430,20],[349,28,430,24],[349,29,430,20],[349,30,429,47],[350,0,431,8,"outputRange"],[350,12,431,8,"outputRange"],[350,23,431,19],[350,25,431,21],[350,26,431,22,"closedDrawerOffset"],[350,44,431,21],[350,46,431,42],[350,47,431,21],[350,48,429,47],[351,0,432,8,"extrapolate"],[351,12,432,8,"extrapolate"],[351,23,432,19],[351,25,432,21],[352,0,429,47],[352,11,429,25],[352,12,429,6],[353,0,434,5],[355,0,435,4],[355,12,435,10,"drawerStyles"],[355,24,435,22],[355,27,435,25],[356,0,436,6,"transform"],[356,10,436,6,"transform"],[356,19,436,15],[356,21,436,17],[356,22,436,18],[357,0,436,20,"translateX"],[357,12,436,20,"translateX"],[357,22,436,30],[357,24,436,32,"drawerTranslateX"],[358,0,436,18],[358,11,436,17],[358,12,435,25],[359,0,437,6,"flexDirection"],[359,10,437,6,"flexDirection"],[359,23,437,19],[359,25,437,21,"reverseContentDirection"],[359,48,437,44],[359,51,437,47],[359,64,437,44],[359,67,437,63],[360,0,435,25],[360,9,435,4],[361,0,440,4],[361,15,441,6],[361,44,441,7],[361,65,441,6],[361,66,441,16],[361,70,441,6],[362,0,441,21],[362,10,441,21],[362,15,441,26],[362,17,441,28,"styles"],[362,23,441,34],[362,24,441,35,"main"],[362,28,441,6],[363,0,441,41],[363,10,441,41],[363,18,441,49],[363,20,441,51],[363,26,441,56,"_handleContainerLayout"],[363,48,441,6],[364,0,441,6],[365,0,441,6],[366,0,441,6],[367,0,441,6],[368,0,441,6],[368,11,442,8],[368,40,442,9],[368,61,442,8],[368,62,442,18],[368,66,442,8],[369,0,443,10],[369,10,443,10],[369,15,443,15],[369,17,443,17],[369,18,444,12,"drawerType"],[369,28,444,22],[369,33,444,27],[369,40,444,12],[369,43,445,16,"styles"],[369,49,445,22],[369,50,445,23,"containerOnBack"],[369,65,444,12],[369,68,446,16,"styles"],[369,74,446,22],[369,75,446,23,"containerInFront"],[369,91,443,17],[369,93,447,12,"containerStyles"],[369,108,443,17],[369,110,448,12,"contentContainerStyle"],[369,131,443,17],[369,132,442,8],[370,0,442,8],[371,0,442,8],[372,0,442,8],[373,0,442,8],[374,0,442,8],[374,11,450,11],[374,18,450,18],[374,24,450,23,"props"],[374,29,450,18],[374,30,450,29,"children"],[374,38,450,11],[374,43,450,42],[374,53,450,11],[374,56,451,14],[374,62,451,19,"props"],[374,67,451,14],[374,68,451,25,"children"],[374,76,451,14],[374,77,451,34],[374,83,451,39,"_openValue"],[374,93,451,14],[374,94,450,11],[374,97,452,14],[374,103,452,19,"props"],[374,108,452,14],[374,109,452,25,"children"],[374,117,442,8],[374,119,453,11],[374,125,453,16,"_renderOverlay"],[374,139,453,11],[374,141,442,8],[374,142,441,6],[374,144,455,8],[374,173,455,9],[374,194,455,8],[374,195,455,18],[374,199,455,8],[375,0,456,10],[375,10,456,10],[375,23,456,23],[375,25,456,24],[375,35,455,8],[376,0,457,10],[376,10,457,10],[376,13,457,13],[376,15,457,15],[376,21,457,20,"_accessibilityIsModalView"],[376,46,455,8],[377,0,458,10],[377,10,458,10],[377,34,458,34],[377,36,458,36],[377,42,458,41,"_drawerShown"],[377,54,455,8],[378,0,459,10],[378,10,459,10],[378,15,459,15],[378,17,459,17],[378,18,459,18,"styles"],[378,24,459,24],[378,25,459,25,"drawerContainer"],[378,40,459,17],[378,42,459,42,"drawerStyles"],[378,54,459,17],[378,55,455,8],[379,0,455,8],[380,0,455,8],[381,0,455,8],[382,0,455,8],[383,0,455,8],[383,11,460,10],[383,40,460,11],[383,57,460,10],[384,0,460,16],[384,10,460,16],[384,15,460,21],[384,17,460,23],[384,18,460,24,"styles"],[384,24,460,30],[384,25,460,31,"drawer"],[384,31,460,23],[384,33,460,39,"dynamicDrawerStyles"],[384,52,460,23],[384,53,460,10],[385,0,460,10],[386,0,460,10],[387,0,460,10],[388,0,460,10],[389,0,460,10],[389,11,461,13],[389,17,461,18,"props"],[389,22,461,13],[389,23,461,24,"renderNavigationView"],[389,43,461,13],[389,44,461,45],[389,50,461,50,"_openValue"],[389,60,461,13],[389,61,460,10],[389,62,455,8],[389,63,441,6],[389,64,440,4],[390,0,466,3],[390,7,100,45],[392,0,100,45],[392,12,468,2,"_setPanGestureRef"],[392,29,100,45],[392,32,468,22],[392,42,468,22,"ref"],[392,45,468,25],[392,47,468,29],[393,0,469,4],[393,14,469,9,"_panGestureHandler"],[393,32,469,4],[393,33,469,28,"current"],[393,40,469,4],[393,43,469,38,"ref"],[393,46,469,4],[394,0,470,4],[394,14,470,9,"props"],[394,19,470,4],[394,20,470,15,"onGestureRef"],[394,32,470,4],[394,36,470,31],[394,42,470,36,"props"],[394,47,470,31],[394,48,470,42,"onGestureRef"],[394,60,470,31],[394,61,470,55,"ref"],[394,64,470,31],[394,65,470,4],[395,0,471,3],[395,7,100,45],[397,0,103,4],[397,10,103,10,"dragX"],[397,16,103,15],[397,19,103,18],[397,23,103,22,"Animated"],[397,45,103,31,"Value"],[397,50,103,18],[397,51,103,37],[397,52,103,18],[397,53,103,4],[399,0,104,4],[399,10,104,10,"touchX"],[399,17,104,16],[399,20,104,19],[399,24,104,23,"Animated"],[399,46,104,32,"Value"],[399,51,104,19],[399,52,104,38],[399,53,104,19],[399,54,104,4],[401,0,105,4],[401,10,105,10,"drawerTranslation"],[401,28,105,27],[401,31,105,30],[401,35,105,34,"Animated"],[401,57,105,43,"Value"],[401,62,105,30],[401,63,105,49],[401,64,105,30],[401,65,105,4],[403,0,107,4],[403,12,107,9,"state"],[403,17,107,4],[403,20,107,17],[404,0,108,6,"dragX"],[404,8,108,6,"dragX"],[404,13,108,11],[404,15,108,6,"dragX"],[404,21,107,17],[405,0,109,6,"touchX"],[405,8,109,6,"touchX"],[405,14,109,12],[405,16,109,6,"touchX"],[405,23,107,17],[406,0,110,6,"drawerTranslation"],[406,8,110,6,"drawerTranslation"],[406,25,110,23],[406,27,110,6,"drawerTranslation"],[406,45,107,17],[407,0,111,6,"containerWidth"],[407,8,111,6,"containerWidth"],[407,22,111,20],[407,24,111,22],[408,0,107,17],[408,7,107,4],[410,0,114,4],[410,12,114,9,"_updateAnimatedEvent"],[410,32,114,4],[410,33,114,30,"props"],[410,39,114,4],[410,41,114,37],[410,47,114,42,"state"],[410,52,114,4],[412,0,100,45],[413,0,115,3],[417,42,117,22,"props"],[417,47],[417,49,117,39,"state"],[417,54],[417,56,117,57],[418,0,118,4],[418,12,119,6],[418,17,119,11,"props"],[418,22,119,6],[418,23,119,17,"drawerPosition"],[418,37,119,6],[418,42,119,36,"props"],[418,47,119,41],[418,48,119,42,"drawerPosition"],[418,62,119,6],[418,66,120,6],[418,71,120,11,"props"],[418,76,120,6],[418,77,120,17,"drawerWidth"],[418,88,120,6],[418,93,120,33,"props"],[418,98,120,38],[418,99,120,39,"drawerWidth"],[418,110,119,6],[418,114,121,6],[418,119,121,11,"props"],[418,124,121,6],[418,125,121,17,"drawerType"],[418,135,121,6],[418,140,121,32,"props"],[418,145,121,37],[418,146,121,38,"drawerType"],[418,156,119,6],[418,160,122,6],[418,165,122,11,"state"],[418,170,122,6],[418,171,122,17,"containerWidth"],[418,185,122,6],[418,190,122,36,"state"],[418,195,122,41],[418,196,122,42,"containerWidth"],[418,210,118,4],[418,212,123,6],[419,0,124,6],[419,15,124,11,"_updateAnimatedEvent"],[419,35,124,6],[419,36,124,32,"props"],[419,41,124,6],[419,43,124,39,"state"],[419,48,124,6],[420,0,125,5],[421,0,126,3],[424,31,473,11],[425,0,473,11],[425,27,479,8],[425,32,479,13,"props"],[425,37,473,11],[426,0,473,11],[426,12,475,6,"drawerPosition"],[426,26,473,11],[426,42,475,6,"drawerPosition"],[426,56,473,11],[427,0,473,11],[427,12,476,6,"drawerLockMode"],[427,26,473,11],[427,42,476,6,"drawerLockMode"],[427,56,473,11],[428,0,473,11],[428,12,477,6,"edgeWidth"],[428,21,473,11],[428,37,477,6,"edgeWidth"],[428,46,473,11],[429,0,473,11],[429,12,478,6,"minSwipeDistance"],[429,28,473,11],[429,44,478,6,"minSwipeDistance"],[429,60,473,11],[430,0,481,4],[430,12,481,10,"fromLeft"],[430,20,481,18],[430,23,481,21,"drawerPosition"],[430,37,481,35],[430,42,481,40],[430,48,481,4],[431,0,486,4],[431,12,486,10,"gestureOrientation"],[431,30,486,28],[431,33,487,6],[431,34,487,7,"fromLeft"],[431,42,487,15],[431,45,487,18],[431,46,487,15],[431,49,487,22],[431,50,487,23],[431,51,487,6],[431,56,487,29],[431,61,487,34,"_drawerShown"],[431,73,487,29],[431,76,487,49],[431,77,487,50],[431,78,487,29],[431,81,487,54],[431,82,487,6],[431,83,486,4],[432,0,492,4],[432,12,492,10,"hitSlop"],[432,19,492,17],[432,22,492,20,"fromLeft"],[432,30,492,28],[432,33,493,8],[433,0,493,10,"left"],[433,10,493,10,"left"],[433,14,493,14],[433,16,493,16],[433,17,493,8],[434,0,493,19,"width"],[434,10,493,19,"width"],[434,15,493,24],[434,17,493,26],[434,22,493,31,"_drawerShown"],[434,34,493,26],[434,37,493,46,"undefined"],[434,46,493,26],[434,49,493,58,"edgeWidth"],[435,0,493,8],[435,9,492,28],[435,12,494,8],[436,0,494,10,"right"],[436,10,494,10,"right"],[436,15,494,15],[436,17,494,17],[436,18,494,8],[437,0,494,20,"width"],[437,10,494,20,"width"],[437,15,494,25],[437,17,494,27],[437,22,494,32,"_drawerShown"],[437,34,494,27],[437,37,494,47,"undefined"],[437,46,494,27],[437,49,494,59,"edgeWidth"],[438,0,494,8],[438,9,492,4],[439,0,496,4],[439,15,497,6],[439,44,497,7],[439,88,497,6],[440,0,498,8],[440,10,498,8],[440,13,498,11],[440,15,498,13],[440,20,498,18,"_setPanGestureRef"],[440,37,497,6],[441,0,499,8],[441,10,499,8],[441,17,499,15],[441,19,499,17,"hitSlop"],[441,26,497,6],[442,0,500,8],[442,10,500,8],[442,23,500,21],[442,25,500,23,"gestureOrientation"],[442,43,500,41],[442,46,500,44,"minSwipeDistance"],[442,62,497,6],[443,0,501,8],[443,10,501,8],[443,21,501,19],[443,23,501,21],[443,24,501,22],[443,25,501,23],[443,27,501,21],[443,29,501,27],[443,31,501,21],[443,32,497,6],[444,0,502,8],[444,10,502,8],[444,24,502,22],[444,26,502,24],[444,31,502,29,"_onGestureEvent"],[444,46,497,6],[445,0,503,8],[445,10,503,8],[445,30,503,28],[445,32,503,30],[445,37,503,35,"_openingHandlerStateChange"],[445,63,497,6],[446,0,504,8],[446,10,504,8],[446,17,504,15],[446,19,505,10,"drawerLockMode"],[446,33,505,24],[446,38,505,29],[446,53,505,10],[446,57,505,48,"drawerLockMode"],[446,71,505,62],[446,76,505,67],[446,89,497,6],[447,0,497,6],[448,0,497,6],[449,0,497,6],[450,0,497,6],[451,0,497,6],[451,11,507,9],[451,16,507,14,"_renderDrawer"],[451,29,507,9],[451,31,497,6],[451,32,496,4],[452,0,510,3],[455,4,77,42,"Component"],[455,20],[455,30,78,9,"defaultProps"],[455,42],[455,45,78,24],[456,0,79,4,"drawerWidth"],[456,4,79,4,"drawerWidth"],[456,15,79,15],[456,17,79,17],[456,20,78,24],[457,0,80,4,"drawerPosition"],[457,4,80,4,"drawerPosition"],[457,18,80,18],[457,20,80,20],[457,26,78,24],[458,0,81,4,"useNativeAnimations"],[458,4,81,4,"useNativeAnimations"],[458,23,81,23],[458,25,81,25],[458,29,78,24],[459,0,82,4,"drawerType"],[459,4,82,4,"drawerType"],[459,14,82,14],[459,16,82,16],[459,23,78,24],[460,0,83,4,"edgeWidth"],[460,4,83,4,"edgeWidth"],[460,13,83,13],[460,15,83,15],[460,17,78,24],[461,0,84,4,"minSwipeDistance"],[461,4,84,4,"minSwipeDistance"],[461,20,84,20],[461,22,84,22],[461,23,78,24],[462,0,85,4,"overlayColor"],[462,4,85,4,"overlayColor"],[462,16,85,16],[462,18,85,18],[462,25,78,24],[463,0,86,4,"drawerLockMode"],[463,4,86,4,"drawerLockMode"],[463,18,86,18],[463,20,86,20],[464,0,78,24],[464,3],[464,12,89,9,"positions"],[464,21],[464,24,89,21],[465,0,90,4,"Left"],[465,4,90,4,"Left"],[465,8,90,8],[465,10,90,10],[465,16,89,21],[466,0,91,4,"Right"],[466,4,91,4,"Right"],[466,9,91,9],[466,11,91,11],[467,0,89,21],[467,3],[472,0,513,0],[472,6,513,6,"styles"],[472,12,513,12],[472,15,513,15,"StyleSheet"],[472,39,513,26,"create"],[472,45,513,15],[472,46,513,33],[473,0,514,2,"drawer"],[473,4,514,2,"drawer"],[473,10,514,8],[473,12,514,10],[474,0,514,12,"flex"],[474,6,514,12,"flex"],[474,10,514,16],[474,12,514,18],[475,0,514,10],[475,5,513,33],[476,0,515,2,"drawerContainer"],[476,4,515,2,"drawerContainer"],[476,19,515,17],[476,53,516,7,"StyleSheet"],[476,77,516,18,"absoluteFillObject"],[476,95,515,17],[477,0,517,4,"zIndex"],[477,6,517,4,"zIndex"],[477,12,517,10],[477,14,517,12],[477,18,515,17],[478,0,518,4,"flexDirection"],[478,6,518,4,"flexDirection"],[478,19,518,17],[478,21,518,19],[479,0,515,17],[479,6,513,33],[480,0,520,2,"containerInFront"],[480,4,520,2,"containerInFront"],[480,20,520,18],[480,54,521,7,"StyleSheet"],[480,78,521,18,"absoluteFillObject"],[480,96,520,18],[481,0,522,4,"zIndex"],[481,6,522,4,"zIndex"],[481,12,522,10],[481,14,522,12],[482,0,520,18],[482,6,513,33],[483,0,524,2,"containerOnBack"],[483,4,524,2,"containerOnBack"],[483,19,524,17],[483,53,525,7,"StyleSheet"],[483,77,525,18,"absoluteFillObject"],[483,95,524,17],[483,96,513,33],[484,0,527,2,"main"],[484,4,527,2,"main"],[484,8,527,6],[484,10,527,8],[485,0,528,4,"flex"],[485,6,528,4,"flex"],[485,10,528,8],[485,12,528,10],[485,13,527,8],[486,0,529,4,"zIndex"],[486,6,529,4,"zIndex"],[486,12,529,10],[486,14,529,12],[486,15,527,8],[487,0,530,4,"overflow"],[487,6,530,4,"overflow"],[487,14,530,12],[487,16,530,14],[488,0,527,8],[488,5,513,33],[489,0,532,2,"overlay"],[489,4,532,2,"overlay"],[489,11,532,9],[489,45,533,7,"StyleSheet"],[489,69,533,18,"absoluteFillObject"],[489,87,532,9],[490,0,534,4,"zIndex"],[490,6,534,4,"zIndex"],[490,12,534,10],[490,14,534,12],[491,0,532,9],[492,0,513,33],[492,3,513,15],[492,4,513,0]]},"type":"js/module"}]}